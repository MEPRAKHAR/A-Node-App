{"ast":null,"code":"import _asyncToGenerator from\"/Users/PrakharGupta/Major-1/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";import _slicedToArray from\"/Users/PrakharGupta/Major-1/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import _regeneratorRuntime from\"/Users/PrakharGupta/Major-1/node_modules/@babel/runtime/regenerator/index.js\";import React,{useState,useRef,useEffect}from'react';import toast from'react-hot-toast';import ACTIONS from'../Actions';import Client from'../components/Client';import Editor from'../components/Editor';import{initSocket}from'../socket';import{useLocation,useNavigate,Navigate,useParams}from'react-router-dom';import ChatBox from'../components/chatbox';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var EditorPage=function EditorPage(){var socketRef=useRef(null);var codeRef=useRef(null);var location=useLocation();var _useParams=useParams(),roomId=_useParams.roomId;var reactNavigator=useNavigate();var _useState=useState([]),_useState2=_slicedToArray(_useState,2),clients=_useState2[0],setClients=_useState2[1];var _useState3=useState('javascript'),_useState4=_slicedToArray(_useState3,2),selectedLanguage=_useState4[0],setSelectedLanguage=_useState4[1];useEffect(function(){var init=/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(){var _location$state;var handleErrors;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:handleErrors=function _handleErrors(e){console.log('socket error',e);toast.error('Socket connection failed, try again later.');reactNavigator('/');};_context.next=3;return initSocket();case 3:socketRef.current=_context.sent;socketRef.current.on('connect_error',function(err){return handleErrors(err);});socketRef.current.on('connect_failed',function(err){return handleErrors(err);});socketRef.current.emit(ACTIONS.JOIN,{roomId:roomId,username:(_location$state=location.state)===null||_location$state===void 0?void 0:_location$state.username});socketRef.current.on(ACTIONS.JOINED,function(_ref2){var _location$state2;var clients=_ref2.clients,username=_ref2.username,socketId=_ref2.socketId;if(username!==((_location$state2=location.state)===null||_location$state2===void 0?void 0:_location$state2.username)){toast.success(\"\".concat(username,\" joined the room.\"));console.log(\"\".concat(username,\" joined\"));}setClients(clients);socketRef.current.emit(ACTIONS.SYNC_CODE,{code:codeRef.current,socketId:socketId});});socketRef.current.on(ACTIONS.DISCONNECTED,function(_ref3){var socketId=_ref3.socketId,username=_ref3.username;toast.success(\"\".concat(username,\" left the room.\"));setClients(function(prev){return prev.filter(function(client){return client.socketId!==socketId;});});});case 9:case\"end\":return _context.stop();}}},_callee);}));return function init(){return _ref.apply(this,arguments);};}();init();return function(){socketRef.current.disconnect();socketRef.current.off(ACTIONS.JOINED);socketRef.current.off(ACTIONS.DISCONNECTED);};},[]);function copyRoomId(){return _copyRoomId.apply(this,arguments);}function _copyRoomId(){_copyRoomId=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee2(){return _regeneratorRuntime.wrap(function _callee2$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:_context2.prev=0;_context2.next=3;return navigator.clipboard.writeText(roomId);case 3:toast.success('Room ID has been copied to your clipboard');_context2.next=10;break;case 6:_context2.prev=6;_context2.t0=_context2[\"catch\"](0);toast.error('Could not copy the Room ID');console.error(_context2.t0);case 10:case\"end\":return _context2.stop();}}},_callee2,null,[[0,6]]);}));return _copyRoomId.apply(this,arguments);}function leaveRoom(){reactNavigator('/');}if(!location.state){return/*#__PURE__*/_jsx(Navigate,{to:\"/\"});}return/*#__PURE__*/_jsxs(\"div\",{className:\"mainWrap\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"aside\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"asideInner\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"logo\",children:/*#__PURE__*/_jsx(\"img\",{className:\"logoImage\",src:\"/codemate.jpg\",alt:\"logo\"})}),/*#__PURE__*/_jsx(\"h3\",{children:\"Connected\"}),/*#__PURE__*/_jsx(\"div\",{className:\"clientsList\",children:clients.map(function(client){return/*#__PURE__*/_jsx(Client,{username:client.username},client.socketId);})})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"button-container\",children:[/*#__PURE__*/_jsx(\"button\",{className:\"btn copyBtn\",onClick:copyRoomId,children:\"Copy ROOM ID\"}),/*#__PURE__*/_jsx(\"button\",{className:\"btn leaveBtn\",onClick:leaveRoom,children:\"Leave\"})]})]}),/*#__PURE__*/_jsx(\"div\",{className:\"middle\",children:/*#__PURE__*/_jsx(Editor,{socketRef:socketRef,roomId:roomId,selectedLanguage:selectedLanguage,onCodeChange:function onCodeChange(code){codeRef.current=code;}})}),/*#__PURE__*/_jsx(\"div\",{className:\"language-selector\",children:/*#__PURE__*/_jsxs(\"select\",{value:selectedLanguage,onChange:function onChange(e){return setSelectedLanguage(e.target.value);},children:[/*#__PURE__*/_jsx(\"option\",{value:\"javascript\",children:\"JavaScript\"}),/*#__PURE__*/_jsx(\"option\",{value:\"python\",children:\"Python\"})]})}),/*#__PURE__*/_jsxs(\"div\",{className:\"right\",children:[/*#__PURE__*/_jsx(\"h1\",{children:\"Welcome to the Chat\"}),/*#__PURE__*/_jsx(ChatBox,{})]}),/*#__PURE__*/_jsx(\"div\",{className:\"bottom\"})]});};export default EditorPage;","map":{"version":3,"sources":["/Users/PrakharGupta/Major-1/src/pages/EditorPage.js"],"names":["React","useState","useRef","useEffect","toast","ACTIONS","Client","Editor","initSocket","useLocation","useNavigate","Navigate","useParams","ChatBox","EditorPage","socketRef","codeRef","location","roomId","reactNavigator","clients","setClients","selectedLanguage","setSelectedLanguage","init","handleErrors","e","console","log","error","current","on","err","emit","JOIN","username","state","JOINED","socketId","success","SYNC_CODE","code","DISCONNECTED","prev","filter","client","disconnect","off","copyRoomId","navigator","clipboard","writeText","leaveRoom","map","target","value"],"mappings":"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","sourcesContent":["import React, { useState, useRef, useEffect } from 'react';\nimport toast from 'react-hot-toast';\nimport ACTIONS from '../Actions';\nimport Client from '../components/Client';\nimport Editor from '../components/Editor';\nimport { initSocket } from '../socket';\nimport {\n    useLocation,\n    useNavigate,\n    Navigate,\n    useParams,\n} from 'react-router-dom';\nimport ChatBox from '../components/chatbox';\n\nconst EditorPage = () => {\n    const socketRef = useRef(null);\n    const codeRef = useRef(null);\n    const location = useLocation();\n    const { roomId } = useParams();\n    const reactNavigator = useNavigate();\n    const [clients, setClients] = useState([]);\n    const [selectedLanguage, setSelectedLanguage] = useState('javascript');\n\n    useEffect(() => {\n        const init = async () => {\n            socketRef.current = await initSocket();\n            socketRef.current.on('connect_error', (err) => handleErrors(err));\n            socketRef.current.on('connect_failed', (err) => handleErrors(err));\n\n            function handleErrors(e) {\n                console.log('socket error', e);\n                toast.error('Socket connection failed, try again later.');\n                reactNavigator('/');\n            }\n\n            socketRef.current.emit(ACTIONS.JOIN, {\n                roomId,\n                username: location.state?.username,\n            });\n\n            socketRef.current.on(\n                ACTIONS.JOINED,\n                ({ clients, username, socketId }) => {\n                    if (username !== location.state?.username) {\n                        toast.success(`${username} joined the room.`);\n                        console.log(`${username} joined`);\n                    }\n                    setClients(clients);\n                    socketRef.current.emit(ACTIONS.SYNC_CODE, {\n                        code: codeRef.current,\n                        socketId,\n                    });\n                }\n            );\n\n            socketRef.current.on(\n                ACTIONS.DISCONNECTED,\n                ({ socketId, username }) => {\n                    toast.success(`${username} left the room.`);\n                    setClients((prev) => {\n                        return prev.filter(\n                            (client) => client.socketId !== socketId\n                        );\n                    });\n                }\n            );\n        };\n        init();\n        return () => {\n            socketRef.current.disconnect();\n            socketRef.current.off(ACTIONS.JOINED);\n            socketRef.current.off(ACTIONS.DISCONNECTED);\n        };\n    }, []);\n\n    async function copyRoomId() {\n        try {\n            await navigator.clipboard.writeText(roomId);\n            toast.success('Room ID has been copied to your clipboard');\n        } catch (err) {\n            toast.error('Could not copy the Room ID');\n            console.error(err);\n        }\n    }\n\n    function leaveRoom() {\n        reactNavigator('/');\n    }\n\n    if (!location.state) {\n        return <Navigate to=\"/\" />;\n    }\n\n    return (\n        <div className=\"mainWrap\">\n            <div className=\"aside\">\n                <div className=\"asideInner\">\n                    <div className=\"logo\">\n                    <img className=\"logoImage\" src=\"/codemate.jpg\" alt=\"logo\" />       \n                    </div>\n                    <h3>Connected</h3>\n                    <div className=\"clientsList\">\n                        {clients.map((client) => (\n                            <Client\n                                key={client.socketId}\n                                username={client.username}\n                            />\n                        ))}\n                    </div>\n                </div>\n                <div className=\"button-container\">\n                    <button className=\"btn copyBtn\" onClick={copyRoomId}>\n                        Copy ROOM ID\n                    </button>\n                    <button className=\"btn leaveBtn\" onClick={leaveRoom}>\n                        Leave\n                    </button>\n                </div>\n        </div>\n\n            <div className=\"middle\">\n                <Editor\n                    socketRef={socketRef}\n                    roomId={roomId}\n                    selectedLanguage={selectedLanguage}\n                    onCodeChange={(code) => {\n                        codeRef.current = code;\n                    }}\n                />\n            </div>\n\n            <div className=\"language-selector\">\n                <select value={selectedLanguage} onChange={(e) => setSelectedLanguage(e.target.value)}>\n                    <option value=\"javascript\">JavaScript</option>\n                    <option value=\"python\">Python</option>\n                </select>\n            </div>\n\n            <div className=\"right\">\n                <h1>Welcome to the Chat</h1>\n                <ChatBox /> \n            </div>\n\n            <div className=\"bottom\"></div>\n        </div>\n)};\n\nexport default EditorPage;\n"]},"metadata":{},"sourceType":"module"}