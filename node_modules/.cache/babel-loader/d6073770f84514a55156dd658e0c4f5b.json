{"ast":null,"code":"import _asyncToGenerator from\"/Users/PrakharGupta/Major-1/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";import _slicedToArray from\"/Users/PrakharGupta/Major-1/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import _regeneratorRuntime from\"/Users/PrakharGupta/Major-1/node_modules/@babel/runtime/regenerator/index.js\";import React,{useState,useRef,useEffect}from'react';import toast from'react-hot-toast';import ACTIONS from'../Actions';import Client from'../components/Client';import Editor from'../components/Editor';import{initSocket}from'../socket';import{useLocation,useNavigate,Navigate,useParams}from'react-router-dom';import ChatBox from'../components/chatbox';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var EditorPage=function EditorPage(){var socketRef=useRef(null);var codeRef=useRef(null);var roomRef=useRef(null);var editorRef=useRef(null);var location=useLocation();var _useParams=useParams(),roomId=_useParams.roomId;var reactNavigator=useNavigate();var _useState=useState([]),_useState2=_slicedToArray(_useState,2),clients=_useState2[0],setClients=_useState2[1];var _useState3=useState('javascript'),_useState4=_slicedToArray(_useState3,2),selectedLanguage=_useState4[0],setSelectedLanguage=_useState4[1];useEffect(function(){roomRef.current=roomId;var init=/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(){var _location$state;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.next=2;return initSocket();case 2:socketRef.current=_context.sent;socketRef.current.on('connect_error',function(err){console.log('socket connect error',err);toast.error('Connection error occurred. Please refresh the page.');});socketRef.current.on('connect_failed',function(err){console.log('socket connect failed',err);toast.error('Failed to connect. Please refresh the page.');});socketRef.current.on('disconnect',function(){console.log('socket disconnected');toast.warning('Disconnected from the room. Refreshing...');setTimeout(function(){return window.location.reload();},2000);});socketRef.current.emit(ACTIONS.JOIN,{roomId:roomId,username:(_location$state=location.state)===null||_location$state===void 0?void 0:_location$state.username});socketRef.current.on(ACTIONS.JOINED,function(_ref2){var _location$state2;var clients=_ref2.clients,username=_ref2.username,socketId=_ref2.socketId;if(username!==((_location$state2=location.state)===null||_location$state2===void 0?void 0:_location$state2.username)){toast.success(\"\".concat(username,\" joined the room.\"));console.log(\"\".concat(username,\" joined\"));}setClients(clients);socketRef.current.emit(ACTIONS.SYNC_CODE,{code:codeRef.current,socketId:socketId});});socketRef.current.on(ACTIONS.DISCONNECTED,function(_ref3){var socketId=_ref3.socketId,username=_ref3.username;toast.success(\"\".concat(username,\" left the room.\"));setClients(function(prev){return prev.filter(function(client){return client.socketId!==socketId;});});});socketRef.current.on(ACTIONS.SET_CURSOR_POSITION,function(_ref4){var roomId=_ref4.roomId,cursorPosition=_ref4.cursorPosition;if(roomId===roomRef.current){editorRef.current.setCursor(cursorPosition);}});case 10:case\"end\":return _context.stop();}}},_callee);}));return function init(){return _ref.apply(this,arguments);};}();init();return function(){socketRef.current.disconnect();socketRef.current.off(ACTIONS.JOINED);socketRef.current.off(ACTIONS.DISCONNECTED);};},[]);function copyRoomId(){return _copyRoomId.apply(this,arguments);}function _copyRoomId(){_copyRoomId=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee2(){return _regeneratorRuntime.wrap(function _callee2$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:_context2.prev=0;_context2.next=3;return navigator.clipboard.writeText(roomId);case 3:toast.success('Room ID has been copied to your clipboard');_context2.next=10;break;case 6:_context2.prev=6;_context2.t0=_context2[\"catch\"](0);toast.error('Could not copy the Room ID');console.error(_context2.t0);case 10:case\"end\":return _context2.stop();}}},_callee2,null,[[0,6]]);}));return _copyRoomId.apply(this,arguments);}function leaveRoom(){reactNavigator('/');}if(!location.state){return/*#__PURE__*/_jsx(Navigate,{to:\"/\"});}return/*#__PURE__*/_jsxs(\"div\",{className:\"mainWrap\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"aside\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"asideInner\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"logo\",children:/*#__PURE__*/_jsx(\"img\",{className:\"logoImage\",src:\"/codemate.jpg\",alt:\"logo\"})}),/*#__PURE__*/_jsx(\"h3\",{children:\"Connected\"}),/*#__PURE__*/_jsx(\"div\",{className:\"clientsList\",children:clients.map(function(client){return/*#__PURE__*/_jsx(Client,{username:client.username},client.socketId);})})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"button-container\",children:[/*#__PURE__*/_jsx(\"button\",{className:\"btn copyBtn\",onClick:copyRoomId,children:\"Copy ROOM ID\"}),/*#__PURE__*/_jsx(\"button\",{className:\"btn leaveBtn\",onClick:leaveRoom,children:\"Leave\"})]})]}),/*#__PURE__*/_jsx(\"div\",{className:\"middle\",children:/*#__PURE__*/_jsx(Editor,{socketRef:socketRef,ref:editorRef,roomId:roomId,selectedLanguage:selectedLanguage,onCodeChange:function onCodeChange(code){codeRef.current=code;}})}),/*#__PURE__*/_jsx(\"div\",{className:\"language-selector\",children:/*#__PURE__*/_jsxs(\"select\",{value:selectedLanguage,onChange:function onChange(e){return setSelectedLanguage(e.target.value);},children:[/*#__PURE__*/_jsx(\"option\",{value:\"javascript\",children:\"JavaScript\"}),/*#__PURE__*/_jsx(\"option\",{value:\"python\",children:\"Python\"})]})}),/*#__PURE__*/_jsxs(\"div\",{className:\"right\",children:[/*#__PURE__*/_jsx(\"h1\",{children:\"Welcome to the Chat\"}),/*#__PURE__*/_jsx(ChatBox,{})]}),/*#__PURE__*/_jsx(\"div\",{className:\"bottom\"})]});};export default EditorPage;","map":{"version":3,"sources":["/Users/PrakharGupta/Major-1/src/pages/EditorPage.js"],"names":["React","useState","useRef","useEffect","toast","ACTIONS","Client","Editor","initSocket","useLocation","useNavigate","Navigate","useParams","ChatBox","EditorPage","socketRef","codeRef","roomRef","editorRef","location","roomId","reactNavigator","clients","setClients","selectedLanguage","setSelectedLanguage","current","init","on","err","console","log","error","warning","setTimeout","window","reload","emit","JOIN","username","state","JOINED","socketId","success","SYNC_CODE","code","DISCONNECTED","prev","filter","client","SET_CURSOR_POSITION","cursorPosition","setCursor","disconnect","off","copyRoomId","navigator","clipboard","writeText","leaveRoom","map","e","target","value"],"mappings":"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","sourcesContent":["import React, { useState, useRef, useEffect } from 'react';\nimport toast from 'react-hot-toast';\nimport ACTIONS from '../Actions';\nimport Client from '../components/Client';\nimport Editor from '../components/Editor';\nimport { initSocket } from '../socket';\nimport {\n    useLocation,\n    useNavigate,\n    Navigate,\n    useParams,\n} from 'react-router-dom';\nimport ChatBox from '../components/chatbox';\n\nconst EditorPage = () => {\n    const socketRef = useRef(null);\n    const codeRef = useRef(null);\n    const roomRef = useRef(null);\n    const editorRef = useRef(null);\n    const location = useLocation();\n    const { roomId } = useParams();\n    const reactNavigator = useNavigate();\n    const [clients, setClients] = useState([]);\n    const [selectedLanguage, setSelectedLanguage] = useState('javascript');\n\n    useEffect(() => {\n        roomRef.current = roomId;\n        const init = async () => {\n            socketRef.current = await initSocket();\n\n            socketRef.current.on('connect_error', (err) => {\n                console.log('socket connect error', err);\n                toast.error('Connection error occurred. Please refresh the page.');\n            });\n\n            socketRef.current.on('connect_failed', (err) => {\n                console.log('socket connect failed', err);\n                toast.error('Failed to connect. Please refresh the page.');\n            });\n\n            socketRef.current.on('disconnect', () => {\n                console.log('socket disconnected');\n                toast.warning('Disconnected from the room. Refreshing...');\n                setTimeout(() => window.location.reload(), 2000);\n            });\n\n            socketRef.current.emit(ACTIONS.JOIN, {\n                roomId,\n                username: location.state?.username,\n            });\n\n            socketRef.current.on(\n                ACTIONS.JOINED,\n                ({ clients, username, socketId }) => {\n                    if (username !== location.state?.username) {\n                        toast.success(`${username} joined the room.`);\n                        console.log(`${username} joined`);\n                    }\n                    setClients(clients);\n                    socketRef.current.emit(ACTIONS.SYNC_CODE, {\n                        code: codeRef.current,\n                        socketId,\n                    });\n                }\n            );\n\n            socketRef.current.on(\n                ACTIONS.DISCONNECTED,\n                ({ socketId, username }) => {\n                    toast.success(`${username} left the room.`);\n                    setClients((prev) => {\n                        return prev.filter(\n                            (client) => client.socketId !== socketId\n                        );\n                    });\n                }\n            );\n            socketRef.current.on(ACTIONS.SET_CURSOR_POSITION, ({ roomId, cursorPosition }) => {\n                if (roomId === roomRef.current) {\n                  editorRef.current.setCursor(cursorPosition);\n                }\n              });\n        };\n        init();\n\n        return () => {\n            socketRef.current.disconnect();\n            socketRef.current.off(ACTIONS.JOINED);\n            socketRef.current.off(ACTIONS.DISCONNECTED);\n        };\n    }, []);\n\n    async function copyRoomId() {\n        try {\n            await navigator.clipboard.writeText(roomId);\n            toast.success('Room ID has been copied to your clipboard');\n        } catch (err) {\n            toast.error('Could not copy the Room ID');\n            console.error(err);\n        }\n    }\n\n    function leaveRoom() {\n        reactNavigator('/');\n    }\n\n    if (!location.state) {\n        return <Navigate to=\"/\" />;\n    }\n\n    return (\n        <div className=\"mainWrap\">\n            <div className=\"aside\">\n                <div className=\"asideInner\">\n                    <div className=\"logo\">\n                    <img className=\"logoImage\" src=\"/codemate.jpg\" alt=\"logo\" />       \n                    </div>\n                    <h3>Connected</h3>\n                    <div className=\"clientsList\">\n                        {clients.map((client) => (\n                            <Client\n                                key={client.socketId}\n                                username={client.username}\n                            />\n                        ))}\n                    </div>\n                </div>\n                <div className=\"button-container\">\n                    <button className=\"btn copyBtn\" onClick={copyRoomId}>\n                        Copy ROOM ID\n                    </button>\n                    <button className=\"btn leaveBtn\" onClick={leaveRoom}>\n                        Leave\n                    </button>\n                </div>\n        </div>\n\n            <div className=\"middle\">\n                <Editor\n                    socketRef={socketRef}\n                    ref={editorRef}\n                    roomId={roomId}\n                    selectedLanguage={selectedLanguage}\n                    onCodeChange={(code) => {\n                        codeRef.current = code;\n                    }}\n                />\n            </div>\n\n            <div className=\"language-selector\">\n                <select value={selectedLanguage} onChange={(e) => setSelectedLanguage(e.target.value)}>\n                    <option value=\"javascript\">JavaScript</option>\n                    <option value=\"python\">Python</option>\n                </select>\n            </div>\n\n            <div className=\"right\">\n                <h1>Welcome to the Chat</h1>\n                <ChatBox /> \n            </div>\n\n            <div className=\"bottom\"></div>\n        </div>\n)};\n\nexport default EditorPage;\n"]},"metadata":{},"sourceType":"module"}