{"ast":null,"code":"import _toConsumableArray from\"/Users/PrakharGupta/Major-1/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\";import _objectSpread from\"/Users/PrakharGupta/Major-1/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import _slicedToArray from\"/Users/PrakharGupta/Major-1/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";// src/components/ChatBox.js\nimport React,{useState,useEffect,useRef}from'react';import moment from'moment';import'./ChatBox.css';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var ChatBox=function ChatBox(_ref){var socketRef=_ref.socketRef,username=_ref.username,roomId=_ref.roomId;var _useState=useState(''),_useState2=_slicedToArray(_useState,2),message=_useState2[0],setMessage=_useState2[1];var _useState3=useState([]),_useState4=_slicedToArray(_useState3,2),messages=_useState4[0],setMessages=_useState4[1];var _useState5=useState(''),_useState6=_slicedToArray(_useState5,2),feedback=_useState6[0],setFeedback=_useState6[1];var messageContainerRef=useRef(null);var sendMessage=function sendMessage(){if(!message)return;var messageData={name:username,message:message,dateTime:new Date(),roomId:roomId// Make sure to include the roomId\n};socketRef.current.emit('message',messageData);// Emit message to the server\naddMessageToUI(true,messageData);setMessage('');};var addMessageToUI=function addMessageToUI(isOwnMessage,data){var newMessage=_objectSpread(_objectSpread({},data),{},{isOwnMessage:isOwnMessage});setMessages(function(prevMessages){return[].concat(_toConsumableArray(prevMessages),[newMessage]);});};var handleInput=function handleInput(e){return setMessage(e.target.value);};var handleSubmit=function handleSubmit(e){e.preventDefault();sendMessage();};// Handle typing feedback\nvar handleTyping=function handleTyping(){if(message){socketRef.current.emit('feedback',{feedback:\"\".concat(username,\" is typing...\"),roomId:roomId});}else{socketRef.current.emit('feedback',{feedback:'',roomId:roomId});}};useEffect(function(){if(socketRef.current){socketRef.current.on('chat-message',function(data){addMessageToUI(false,data);});socketRef.current.on('feedback',function(data){setFeedback(data.feedback);});}// Scroll to the bottom whenever a new message is added\nif(messageContainerRef.current){messageContainerRef.current.scrollTop=messageContainerRef.current.scrollHeight;}},[messages]);return/*#__PURE__*/_jsxs(\"div\",{className:\"chatBox\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"messages\",ref:messageContainerRef,children:messages.map(function(msg,index){return/*#__PURE__*/_jsxs(\"div\",{className:\"message \".concat(msg.isOwnMessage?'own':'other'),children:[/*#__PURE__*/_jsxs(\"p\",{children:[/*#__PURE__*/_jsx(\"strong\",{children:msg.name}),\": \",msg.message]}),/*#__PURE__*/_jsx(\"span\",{children:moment(msg.dateTime).fromNow()})]},index);})}),feedback&&/*#__PURE__*/_jsx(\"div\",{className:\"typing-feedback\",children:feedback}),/*#__PURE__*/_jsxs(\"form\",{onSubmit:handleSubmit,children:[/*#__PURE__*/_jsx(\"input\",{type:\"text\",value:message,onChange:handleInput,placeholder:\"Type a message...\",onKeyUp:handleTyping// Trigger typing feedback on keyup\n}),/*#__PURE__*/_jsx(\"button\",{type:\"submit\",children:\"Send\"})]})]});};export default ChatBox;","map":{"version":3,"sources":["/Users/PrakharGupta/Major-1/src/components/ChatBox.js"],"names":["React","useState","useEffect","useRef","moment","ChatBox","socketRef","username","roomId","message","setMessage","messages","setMessages","feedback","setFeedback","messageContainerRef","sendMessage","messageData","name","dateTime","Date","current","emit","addMessageToUI","isOwnMessage","data","newMessage","prevMessages","handleInput","e","target","value","handleSubmit","preventDefault","handleTyping","on","scrollTop","scrollHeight","map","msg","index","fromNow"],"mappings":"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","sourcesContent":["// src/components/ChatBox.js\nimport React, { useState, useEffect, useRef } from 'react';\nimport moment from 'moment';\nimport './ChatBox.css';\n\nconst ChatBox = ({ socketRef, username, roomId }) => {\n    const [message, setMessage] = useState('');\n    const [messages, setMessages] = useState([]);\n    const [feedback, setFeedback] = useState('');\n    const messageContainerRef = useRef(null);\n\n    const sendMessage = () => {\n        if (!message) return;\n        const messageData = {\n            name: username,\n            message,\n            dateTime: new Date(),\n            roomId, // Make sure to include the roomId\n        };\n        socketRef.current.emit('message', messageData); // Emit message to the server\n        addMessageToUI(true, messageData);\n        setMessage('');\n    };\n\n    const addMessageToUI = (isOwnMessage, data) => {\n        const newMessage = {\n            ...data,\n            isOwnMessage,\n        };\n        setMessages((prevMessages) => [...prevMessages, newMessage]);\n    };\n\n    const handleInput = (e) => setMessage(e.target.value);\n\n    const handleSubmit = (e) => {\n        e.preventDefault();\n        sendMessage();\n    };\n\n    // Handle typing feedback\n    const handleTyping = () => {\n        if (message) {\n            socketRef.current.emit('feedback', { feedback: `${username} is typing...`, roomId });\n        } else {\n            socketRef.current.emit('feedback', { feedback: '', roomId });\n        }\n    };\n\n    useEffect(() => {\n        if (socketRef.current) {\n            socketRef.current.on('chat-message', (data) => {\n                addMessageToUI(false, data);\n            });\n\n            socketRef.current.on('feedback', (data) => {\n                setFeedback(data.feedback);\n            });\n        }\n\n        // Scroll to the bottom whenever a new message is added\n        if (messageContainerRef.current) {\n            messageContainerRef.current.scrollTop = messageContainerRef.current.scrollHeight;\n        }\n    }, [messages]);\n\n    return (\n        <div className=\"chatBox\">\n            <div className=\"messages\" ref={messageContainerRef}>\n                {messages.map((msg, index) => (\n                    <div\n                        key={index}\n                        className={`message ${msg.isOwnMessage ? 'own' : 'other'}`}\n                    >\n                        <p>\n                            <strong>{msg.name}</strong>: {msg.message}\n                        </p>\n                        <span>{moment(msg.dateTime).fromNow()}</span>\n                    </div>\n                ))}\n            </div>\n            {feedback && <div className=\"typing-feedback\">{feedback}</div>}\n            <form onSubmit={handleSubmit}>\n                <input\n                    type=\"text\"\n                    value={message}\n                    onChange={handleInput}\n                    placeholder=\"Type a message...\"\n                    onKeyUp={handleTyping} // Trigger typing feedback on keyup\n                />\n                <button type=\"submit\">Send</button>\n            </form>\n        </div>\n    );\n};\n\nexport default ChatBox;\n"]},"metadata":{},"sourceType":"module"}