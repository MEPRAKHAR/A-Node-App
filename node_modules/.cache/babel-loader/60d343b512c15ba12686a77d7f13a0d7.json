{"ast":null,"code":"import _asyncToGenerator from\"/Users/PrakharGupta/Major-1/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";import _regeneratorRuntime from\"/Users/PrakharGupta/Major-1/node_modules/@babel/runtime/regenerator/index.js\";import React,{useEffect,useRef,useContext}from'react';import Codemirror from'codemirror';import'codemirror/lib/codemirror.css';import'codemirror/theme/dracula.css';import'codemirror/mode/javascript/javascript';import'codemirror/mode/python/python';import'codemirror/addon/edit/closetag';import'codemirror/addon/edit/closebrackets';import ACTIONS from'../Actions';import{SocketContext}from'../socket';import{jsx as _jsx}from\"react/jsx-runtime\";var Editor=function Editor(_ref){var roomId=_ref.roomId,onCodeChange=_ref.onCodeChange,selectedLanguage=_ref.selectedLanguage;var editorRef=useRef(null);var socketContext=useContext(SocketContext);useEffect(function(){var editor;var init=/*#__PURE__*/function(){var _ref2=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(){var initialCursorPosition;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:editor=Codemirror.fromTextArea(document.getElementById('realtimeEditor'),{mode:{name:selectedLanguage,json:true},theme:'dracula',autoCloseTags:true,autoCloseBrackets:true,lineNumbers:true});editor.on('change',function(instance,changes){var origin=changes.origin;var code=instance.getValue();var cursorPosition=editor.getCursor();onCodeChange(code);if(origin!=='setValue'){socketContext.emit(ACTIONS.CODE_CHANGE,{roomId:roomId,code:code,cursorPosition:{line:cursorPosition.line,ch:cursorPosition.ch}});}});initialCursorPosition=editor.getCursor();if(socketContext){socketContext.emit(ACTIONS.SET_CURSOR_POSITION,{roomId:roomId,cursorPosition:{line:initialCursorPosition.line,ch:initialCursorPosition.ch}});}case 4:case\"end\":return _context.stop();}}},_callee);}));return function init(){return _ref2.apply(this,arguments);};}();init();},[socketContext,roomId,onCodeChange,selectedLanguage]);useEffect(function(){var handleCodeChange=function handleCodeChange(_ref3){var code=_ref3.code,cursorPosition=_ref3.cursorPosition;if(code!==null&&editorRef.current){editorRef.current.setValue(code);moveCursorToPosition(cursorPosition);}};if(socketContext){socketContext.on(ACTIONS.CODE_CHANGE,handleCodeChange);}return function(){if(editorRef.current){editorRef.current.toTextArea();}if(socketContext){socketContext.off(ACTIONS.CODE_CHANGE);}};},[]);function moveCursorToPosition(position){if(editorRef.current){editorRef.current.setCursor({line:position.line,ch:position.ch});}}return/*#__PURE__*/_jsx(\"textarea\",{id:\"realtimeEditor\"});};export default Editor;","map":{"version":3,"sources":["/Users/PrakharGupta/Major-1/src/components/Editor.js"],"names":["React","useEffect","useRef","useContext","Codemirror","ACTIONS","SocketContext","Editor","roomId","onCodeChange","selectedLanguage","editorRef","socketContext","editor","init","fromTextArea","document","getElementById","mode","name","json","theme","autoCloseTags","autoCloseBrackets","lineNumbers","on","instance","changes","origin","code","getValue","cursorPosition","getCursor","emit","CODE_CHANGE","line","ch","initialCursorPosition","SET_CURSOR_POSITION","handleCodeChange","current","setValue","moveCursorToPosition","toTextArea","off","position","setCursor"],"mappings":"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","sourcesContent":["import React, { useEffect, useRef, useContext } from 'react';\nimport Codemirror from 'codemirror';\nimport 'codemirror/lib/codemirror.css';\nimport 'codemirror/theme/dracula.css';\nimport 'codemirror/mode/javascript/javascript';\nimport 'codemirror/mode/python/python';\nimport 'codemirror/addon/edit/closetag';\nimport 'codemirror/addon/edit/closebrackets';\nimport ACTIONS from '../Actions';\nimport { SocketContext } from '../socket';\n\nconst Editor = ({ roomId, onCodeChange, selectedLanguage }) => {\n  const editorRef = useRef(null);\n  const socketContext = useContext(SocketContext);\n\n  useEffect(() => {\n    let editor;\n    const init = async () => {\n      editor = Codemirror.fromTextArea(\n        document.getElementById('realtimeEditor'),\n        {\n          mode: { name: selectedLanguage, json: true },\n          theme: 'dracula',\n          autoCloseTags: true,\n          autoCloseBrackets: true,\n          lineNumbers: true,\n        }\n      );\n\n      editor.on('change', (instance, changes) => {\n        const { origin } = changes;\n        const code = instance.getValue();\n        const cursorPosition = editor.getCursor();\n\n        onCodeChange(code);\n        if (origin !== 'setValue') {\n          socketContext.emit(ACTIONS.CODE_CHANGE, {\n            roomId,\n            code,\n            cursorPosition: { line: cursorPosition.line, ch: cursorPosition.ch }\n          });\n        }\n      });\n\n      const initialCursorPosition = editor.getCursor();\n      if (socketContext) {\n        socketContext.emit(ACTIONS.SET_CURSOR_POSITION, {\n          roomId,\n          cursorPosition: { line: initialCursorPosition.line, ch: initialCursorPosition.ch }\n        });\n      }\n    };\n\n    init();\n  }, [socketContext, roomId, onCodeChange, selectedLanguage]);\n\n  useEffect(() => {\n    const handleCodeChange = ({ code, cursorPosition }) => {\n      if (code !== null && editorRef.current) {\n        editorRef.current.setValue(code);\n        moveCursorToPosition(cursorPosition);\n      }\n    };\n\n    if (socketContext) {\n      socketContext.on(ACTIONS.CODE_CHANGE, handleCodeChange);\n    }\n\n    return () => {\n      if (editorRef.current) {\n        editorRef.current.toTextArea();\n      }\n      if (socketContext) {\n        socketContext.off(ACTIONS.CODE_CHANGE);\n      }\n    };\n  }, []);\n\n  function moveCursorToPosition(position) {\n    if (editorRef.current) {\n      editorRef.current.setCursor({ line: position.line, ch: position.ch });\n    }\n  }\n\n  return <textarea id=\"realtimeEditor\"></textarea>;\n};\n\nexport default Editor;"]},"metadata":{},"sourceType":"module"}