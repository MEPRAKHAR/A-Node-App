{"map":"{\"version\":3,\"sources\":[\"/Users/PrakharGupta/Major-1/src/Actions.js\",\"/Users/PrakharGupta/Major-1/src/pages/Home.js\",\"/Users/PrakharGupta/Major-1/src/components/Client.js\",\"/Users/PrakharGupta/Major-1/src/components/Editor.js\",\"/Users/PrakharGupta/Major-1/src/components/chatbox.js\",\"/Users/PrakharGupta/Major-1/src/pages/EditorPage.js\",\"/Users/PrakharGupta/Major-1/src/socket.js\",\"/Users/PrakharGupta/Major-1/src/App.js\",\"/Users/PrakharGupta/Major-1/src/reportWebVitals.js\",\"/Users/PrakharGupta/Major-1/src/index.js\"],\"names\":[\"module\",\"exports\",\"JOIN\",\"JOINED\",\"DISCONNECTED\",\"CODE_CHANGE\",\"SYNC_CODE\",\"LEAVE\",\"Home\",\"navigate\",\"useNavigate\",\"roomId\",\"setRoomId\",\"useState\",\"username\",\"setUsername\",\"joinRoom\",\"state\",\"toast\",\"error\",\"handleInputEnter\",\"e\",\"code\",\"React\",\"createElement\",\"className\",\"src\",\"type\",\"placeholder\",\"onChange\",\"target\",\"value\",\"onKeyUp\",\"onClick\",\"preventDefault\",\"id\",\"uuidV4\",\"success\",\"href\",\"role\",\"aria-label\",\"Client\",\"_ref\",\"Avatar\",\"name\",\"size\",\"round\",\"Editor\",\"onCodeChange\",\"selectedLanguage\",\"editorRef\",\"useRef\",\"userCursors\",\"setUserCursors\",\"useEffect\",\"editor\",\"async\",\"Codemirror\",\"fromTextArea\",\"document\",\"getElementById\",\"mode\",\"json\",\"theme\",\"autoCloseTags\",\"autoCloseBrackets\",\"lineNumbers\",\"on\",\"instance\",\"changes\",\"origin\",\"getValue\",\"cursorPosition\",\"getCursor\",\"socketContext\",\"emit\",\"ACTIONS\",\"line\",\"ch\",\"userId\",\"SET_CURSOR_POSITION\",\"current\",\"init\",\"handleCodeChange\",\"_ref2\",\"setValue\",\"updateUserCursor\",\"handleCursorPosition\",\"_ref3\",\"position\",\"prevCursors\",\"[object Object]\",\"Object\",\"entries\",\"forEach\",\"_ref4\",\"cursorElement\",\"style\",\"borderLeft\",\"toString\",\"padStart\",\"getUserColor\",\"setBookmark\",\"widget\",\"off\",\"ChatBox\",\"width\",\"height\",\"allow\",\"border\",\"frameBorder\",\"marginTop\",\"marginBottom\",\"marginLeft\",\"marginRight\",\"overflowY\",\"title\",\"EditorPage\",\"socketRef\",\"codeRef\",\"location\",\"useLocation\",\"useParams\",\"reactNavigator\",\"clients\",\"setClients\",\"setSelectedLanguage\",\"_location$state\",\"handleErrors\",\"console\",\"log\",\"io\",\"process\",\"REACT_APP_BACKEND_URL\",\"force new connection\",\"reconnectionAttempt\",\"timeout\",\"transports\",\"initSocket\",\"err\",\"_location$state2\",\"socketId\",\"prev\",\"filter\",\"client\",\"disconnect\",\"alt\",\"map\",\"key\",\"navigator\",\"clipboard\",\"writeText\",\"Navigate\",\"to\",\"App\",\"Fragment\",\"Toaster\",\"toastOptions\",\"primary\",\"BrowserRouter\",\"Routes\",\"Route\",\"path\",\"element\",\"reportWebVitals\",\"onPerfEntry\",\"Function\",\"__webpack_require__\",\"then\",\"bind\",\"getCLS\",\"getFID\",\"getFCP\",\"getLCP\",\"getTTFB\",\"ReactDOM\",\"render\",\"StrictMode\"],\"mappings\":\"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\",\"sourcesContent\":[\"const ACTIONS = {\\n    JOIN: 'join',\\n    JOINED: 'joined',\\n    DISCONNECTED: 'disconnected',\\n    CODE_CHANGE: 'code-change',\\n    SYNC_CODE: 'sync-code',\\n    LEAVE: 'leave',\\n};\\n\\nmodule.exports = ACTIONS;\\n\",\"import React, { useState } from 'react';\\nimport { v4 as uuidV4 } from 'uuid';\\nimport toast from 'react-hot-toast';\\nimport { useNavigate } from 'react-router-dom';\\n\\nconst Home = () => {\\n    const navigate = useNavigate();\\n\\n    const [roomId, setRoomId] = useState('');\\n    const [username, setUsername] = useState('');\\n    const createNewRoom = (e) => {\\n        e.preventDefault();\\n        const id = uuidV4();\\n        setRoomId(id);\\n        toast.success('Created a new room');\\n    };\\n\\n    const joinRoom = () => {\\n        if (!roomId || !username) {\\n            toast.error('ROOM ID & username is required');\\n            return;\\n        }\\n\\n        // Redirect\\n        navigate(`/editor/${roomId}`, {\\n            state: {\\n                username,\\n            },\\n        });\\n    };\\n\\n    const handleInputEnter = (e) => {\\n        if (e.code === 'Enter') {\\n            joinRoom();\\n        }\\n    };\\n    return (\\n        <div className=\\\"homePageWrapper\\\">\\n            <div className=\\\"formWrapper\\\">\\n            <div className=\\\"logo-container\\\">\\n                  <img src = \\\"/codemate.jpg\\\" className=\\\"logo-home\\\" />\\n                </div>\\n                <h4 className=\\\"mainLabel\\\">Paste ROOM ID</h4>\\n                <div className=\\\"inputGroup\\\">\\n                    <input\\n                        type=\\\"text\\\"\\n                        className=\\\"inputBox\\\"\\n                        placeholder=\\\"ROOM ID\\\"\\n                        onChange={(e) => setRoomId(e.target.value)}\\n                        value={roomId}\\n                        onKeyUp={handleInputEnter}\\n                    />\\n                    <input\\n                        type=\\\"text\\\"\\n                        className=\\\"inputBox\\\"\\n                        placeholder=\\\"USERNAME\\\"\\n                        onChange={(e) => setUsername(e.target.value)}\\n                        value={username}\\n                        onKeyUp={handleInputEnter}\\n                    />\\n                    <button className=\\\"btn joinBtn\\\" onClick={joinRoom}>\\n                        Join\\n                    </button>\\n                    <span className=\\\"createInfo\\\">\\n                        If you don't have an invite then create &nbsp;\\n                        <a\\n                            onClick={createNewRoom}\\n                            href=\\\"/create-room\\\"\\n                            className=\\\"createNewBtn\\\"\\n                        >\\n                            new room\\n                        </a>\\n                    </span>\\n                </div>\\n            </div>\\n            <footer>\\n            <h4>\\n            Built with <span role=\\\"img\\\" aria-label=\\\"love\\\">💛</span> by <a href=\\\"https://github.com/MEPRAKHAR\\\">Prakhar</a> & <a href=\\\"https://github.com/ikigai0822\\\">Pranay</a>\\n\\n            </h4>\\n            </footer>\\n        </div>\\n    );\\n};\\n\\nexport default Home;\\n\",\"import React from 'react';\\nimport Avatar from 'react-avatar';\\n\\nconst Client = ({ username }) => {\\n    return (\\n        <div className=\\\"client\\\">\\n            <Avatar name={username} size={50} round=\\\"14px\\\" />\\n            <span className=\\\"userName\\\">{username}</span>\\n        </div>\\n    );\\n};\\n\\nexport default Client;\\n\",\"import React, { useEffect, useRef, useContext, useState } from 'react';\\nimport Codemirror from 'codemirror';\\nimport 'codemirror/lib/codemirror.css';\\nimport 'codemirror/theme/dracula.css';\\nimport 'codemirror/mode/javascript/javascript';\\nimport 'codemirror/mode/python/python';\\nimport 'codemirror/addon/edit/closetag';\\nimport 'codemirror/addon/edit/closebrackets';\\nimport ACTIONS from '../Actions';\\n\\n\\nconst Editor = ({ roomId, onCodeChange, selectedLanguage }) => {\\n  const editorRef = useRef(null);\\n  const [userCursors, setUserCursors] = useState({});\\n\\n  useEffect(() => {\\n    let editor;\\n    const init = async () => {\\n      editor = Codemirror.fromTextArea(\\n        document.getElementById('realtimeEditor'),\\n        {\\n          mode: { name: selectedLanguage, json: true },\\n          theme: 'dracula',\\n          autoCloseTags: true,\\n          autoCloseBrackets: true,\\n          lineNumbers: true,\\n        }\\n      );\\n\\n      editor.on('change', (instance, changes) => {\\n        const { origin } = changes;\\n        const code = instance.getValue();\\n        const cursorPosition = editor.getCursor();\\n\\n        onCodeChange(code);\\n        if (origin !== 'setValue' && socketContext) {\\n          socketContext.emit(ACTIONS.CODE_CHANGE, {\\n            roomId,\\n            code,\\n            cursorPosition: { line: cursorPosition.line, ch: cursorPosition.ch },\\n            userId: socketContext.userId,\\n          });\\n        }\\n      });\\n\\n      editor.on('cursorActivity', () => {\\n        const cursorPosition = editor.getCursor();\\n        socketContext.emit(ACTIONS.SET_CURSOR_POSITION, {\\n          roomId,\\n          cursorPosition: { line: cursorPosition.line, ch: cursorPosition.ch },\\n          userId: socketContext.userId,\\n        });\\n      });\\n\\n      editorRef.current = editor;\\n    };\\n\\n    init();\\n  }, [socketContext, roomId, onCodeChange, selectedLanguage]);\\n\\n  useEffect(() => {\\n    const handleCodeChange = ({ code, cursorPosition, userId }) => {\\n      if (code !== null && editorRef.current) {\\n        editorRef.current.setValue(code);\\n      }\\n      if (cursorPosition && userId !== socketContext.userId) {\\n        updateUserCursor(userId, cursorPosition);\\n      }\\n    };\\n\\n    const handleCursorPosition = ({ cursorPosition, userId }) => {\\n      if (userId !== socketContext.userId) {\\n        updateUserCursor(userId, cursorPosition);\\n      }\\n    };\\n\\n    function updateUserCursor(userId, position) {\\n      setUserCursors((prevCursors) => ({\\n        ...prevCursors,\\n        [userId]: position,\\n      }));\\n      renderCursors();\\n    }\\n\\n    function renderCursors() {\\n      Object.entries(userCursors).forEach(([userId, position]) => {\\n        if (editorRef.current) {\\n          const cursorElement = document.createElement('span');\\n          cursorElement.style.borderLeft = `2px solid ${getUserColor(userId)}`;\\n          cursorElement.className = 'remote-cursor';\\n          editorRef.current.setBookmark(position, { widget: cursorElement });\\n        }\\n      });\\n    }\\n\\n    if (socketContext) {\\n      socketContext.on(ACTIONS.CODE_CHANGE, handleCodeChange);\\n      socketContext.on(ACTIONS.SET_CURSOR_POSITION, handleCursorPosition);\\n    }\\n\\n    return () => {\\n      if (socketContext) {\\n        socketContext.off(ACTIONS.CODE_CHANGE);\\n        socketContext.off(ACTIONS.SET_CURSOR_POSITION);\\n      }\\n    };\\n  }, [socketContext, userCursors]);\\n\\n  function getUserColor(userId) {\\n    // Assign a color based on userId (you can use a color library or hash to generate unique colors)\\n    return '#' + ((userId * 12345678) % 0xffffff).toString(16).padStart(6, '0');\\n  }\\n\\n  return <textarea id=\\\"realtimeEditor\\\"></textarea>;\\n};\\n\\nexport default Editor;\\n\",\"import React from 'react';\\n\\nconst ChatBox = () => {\\n    return (\\n        <div className=\\\"chat-container\\\">\\n          <p>ChatBox Component</p>\\n          <iframe\\n            src=\\\"https://www5.cbox.ws/box/?boxid=953150&boxtag=l6XwUZ\\\"\\n            width=\\\"100%\\\"\\n            height=\\\"450px\\\"\\n            allow=\\\"autoplay\\\"\\n            style={{\\n                border: 'none',\\n                frameBorder: '0',\\n                marginTop: '0',\\n                marginBottom: '0',\\n                marginLeft: '0',\\n                marginRight: '0',\\n                overflowY: 'auto'\\n              }}\\n            title=\\\"Chat Box\\\"\\n          ></iframe>\\n        </div>\\n      );\\n    };\\n\\nexport default ChatBox;\",\"import React, { useState, useRef, useEffect } from 'react';\\nimport toast from 'react-hot-toast';\\nimport ACTIONS from '../Actions';\\nimport Client from '../components/Client';\\nimport Editor from '../components/Editor';\\nimport { initSocket } from '../socket';\\nimport {\\n    useLocation,\\n    useNavigate,\\n    Navigate,\\n    useParams,\\n} from 'react-router-dom';\\nimport ChatBox from '../components/chatbox';\\n\\nconst EditorPage = () => {\\n    const socketRef = useRef(null);\\n    const codeRef = useRef(null);\\n    const location = useLocation();\\n    const { roomId } = useParams();\\n    const reactNavigator = useNavigate();\\n    const [clients, setClients] = useState([]);\\n    const [selectedLanguage, setSelectedLanguage] = useState('javascript');\\n\\n    useEffect(() => {\\n        const init = async () => {\\n            socketRef.current = await initSocket();\\n            socketRef.current.on('connect_error', (err) => handleErrors(err));\\n            socketRef.current.on('connect_failed', (err) => handleErrors(err));\\n\\n            function handleErrors(e) {\\n                console.log('socket error', e);\\n                toast.error('Socket connection failed, try again later.');\\n                reactNavigator('/');\\n            }\\n\\n            socketRef.current.emit(ACTIONS.JOIN, {\\n                roomId,\\n                username: location.state?.username,\\n            });\\n\\n            socketRef.current.on(\\n                ACTIONS.JOINED,\\n                ({ clients, username, socketId }) => {\\n                    if (username !== location.state?.username) {\\n                        toast.success(`${username} joined the room.`);\\n                        console.log(`${username} joined`);\\n                    }\\n                    setClients(clients);\\n                    socketRef.current.emit(ACTIONS.SYNC_CODE, {\\n                        code: codeRef.current,\\n                        socketId,\\n                    });\\n                }\\n            );\\n\\n            socketRef.current.on(\\n                ACTIONS.DISCONNECTED,\\n                ({ socketId, username }) => {\\n                    toast.success(`${username} left the room.`);\\n                    setClients((prev) => {\\n                        return prev.filter(\\n                            (client) => client.socketId !== socketId\\n                        );\\n                    });\\n                }\\n            );\\n        };\\n        init();\\n        return () => {\\n            socketRef.current.disconnect();\\n            socketRef.current.off(ACTIONS.JOINED);\\n            socketRef.current.off(ACTIONS.DISCONNECTED);\\n        };\\n    }, []);\\n\\n    async function copyRoomId() {\\n        try {\\n            await navigator.clipboard.writeText(roomId);\\n            toast.success('Room ID has been copied to your clipboard');\\n        } catch (err) {\\n            toast.error('Could not copy the Room ID');\\n            console.error(err);\\n        }\\n    }\\n\\n    function leaveRoom() {\\n        reactNavigator('/');\\n    }\\n\\n    if (!location.state) {\\n        return <Navigate to=\\\"/\\\" />;\\n    }\\n\\n    return (\\n        <div className=\\\"mainWrap\\\">\\n            <div className=\\\"aside\\\">\\n                <div className=\\\"asideInner\\\">\\n                    <div className=\\\"logo\\\">\\n                    <img className=\\\"logoImage\\\" src=\\\"/codemate.jpg\\\" alt=\\\"logo\\\" />       \\n                    </div>\\n                    <h3>Connected</h3>\\n                    <div className=\\\"clientsList\\\">\\n                        {clients.map((client) => (\\n                            <Client\\n                                key={client.socketId}\\n                                username={client.username}\\n                            />\\n                        ))}\\n                    </div>\\n                </div>\\n                <div className=\\\"button-container\\\">\\n                    <button className=\\\"btn copyBtn\\\" onClick={copyRoomId}>\\n                        Copy ROOM ID\\n                    </button>\\n                    <button className=\\\"btn leaveBtn\\\" onClick={leaveRoom}>\\n                        Leave\\n                    </button>\\n                </div>\\n        </div>\\n\\n            <div className=\\\"middle\\\">\\n                <Editor\\n                    socketRef={socketRef}\\n                    roomId={roomId}\\n                    selectedLanguage={selectedLanguage}\\n                    onCodeChange={(code) => {\\n                        codeRef.current = code;\\n                    }}\\n                />\\n            </div>\\n\\n            <div className=\\\"language-selector\\\">\\n                <select value={selectedLanguage} onChange={(e) => setSelectedLanguage(e.target.value)}>\\n                    <option value=\\\"javascript\\\">JavaScript</option>\\n                    <option value=\\\"python\\\">Python</option>\\n                </select>\\n            </div>\\n\\n            <div className=\\\"right\\\">\\n                <h1>Welcome to the Chat</h1>\\n                <ChatBox /> \\n            </div>\\n\\n            <div className=\\\"bottom\\\"></div>\\n        </div>\\n)};\\n\\nexport default EditorPage;\\n\",\"import { io } from 'socket.io-client';\\n\\nexport const initSocket = async () => {\\n    const options = {\\n        'force new connection': true,\\n        reconnectionAttempt: 'Infinity',\\n        timeout: 10000,\\n        transports: ['websocket'],\\n    };\\n    return io(process.env.REACT_APP_BACKEND_URL, options);\\n};\\n\",\"import React from 'react';\\nimport './App.css';\\nimport { BrowserRouter, Routes, Route } from 'react-router-dom';\\nimport { Toaster } from 'react-hot-toast';\\nimport Home from './pages/Home';\\nimport EditorPage from './pages/EditorPage';\\n\\nfunction App() {\\n    return (\\n        <>\\n            <div>\\n                <Toaster\\n                    position=\\\"top-right\\\"\\n                    toastOptions={{\\n                        success: {\\n                            theme: {\\n                                primary: '#4aed88',\\n                            },\\n                        },\\n                    }}\\n                ></Toaster>\\n            </div>\\n            <BrowserRouter>\\n                <Routes>\\n                    <Route path=\\\"/\\\" element={<Home />}></Route>\\n                    <Route\\n                        path=\\\"/editor/:roomId\\\"\\n                        element={<EditorPage />}\\n                    ></Route>\\n                </Routes>\\n            </BrowserRouter>\\n        </>\\n    );\\n}\\n\\nexport default App;\\n\",\"const reportWebVitals = onPerfEntry => {\\n  if (onPerfEntry && onPerfEntry instanceof Function) {\\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\\n      getCLS(onPerfEntry);\\n      getFID(onPerfEntry);\\n      getFCP(onPerfEntry);\\n      getLCP(onPerfEntry);\\n      getTTFB(onPerfEntry);\\n    });\\n  }\\n};\\n\\nexport default reportWebVitals;\\n\",\"import React from 'react';\\nimport ReactDOM from 'react-dom';\\nimport './index.css';\\nimport App from './App';\\nimport reportWebVitals from './reportWebVitals';\\n\\nReactDOM.render(\\n  <React.StrictMode>\\n    <App />\\n  </React.StrictMode>,\\n  document.getElementById('root')\\n);\\n\\n// If you want to start measuring performance in your app, pass a function\\n// to log results (for example: reportWebVitals(console.log))\\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\\nreportWebVitals();\\n\"]}","code":"(window.webpackJsonp=window.webpackJsonp||[]).push([[0],{113:function(e,t,a){e.exports=a(203)},118:function(e,t,a){},119:function(e,t,a){},12:function(e,t){e.exports={JOIN:\"join\",JOINED:\"joined\",DISCONNECTED:\"disconnected\",CODE_CHANGE:\"code-change\",SYNC_CODE:\"sync-code\",LEAVE:\"leave\"}},203:function(e,t,a){\"use strict\";a.r(t);var n=a(0),o=a.n(n),r=a(51),c=a.n(r),l=(a(118),a(119),a(50)),s=a(2),m=a(16),i=a.n(m),u=a(205);var d=()=>{const e=Object(s.p)(),[t,a]=Object(n.useState)(\"\"),[r,c]=Object(n.useState)(\"\"),l=()=>{t&&r?e(`/editor/${t}`,{state:{username:r}}):i.a.error(\"ROOM ID & username is required\")},m=e=>{\"Enter\"===e.code&&l()};return o.a.createElement(\"div\",{className:\"homePageWrapper\"},o.a.createElement(\"div\",{className:\"formWrapper\"},o.a.createElement(\"div\",{className:\"logo-container\"},o.a.createElement(\"img\",{src:\"/codemate.jpg\",className:\"logo-home\"})),o.a.createElement(\"h4\",{className:\"mainLabel\"},\"Paste ROOM ID\"),o.a.createElement(\"div\",{className:\"inputGroup\"},o.a.createElement(\"input\",{type:\"text\",className:\"inputBox\",placeholder:\"ROOM ID\",onChange:e=>a(e.target.value),value:t,onKeyUp:m}),o.a.createElement(\"input\",{type:\"text\",className:\"inputBox\",placeholder:\"USERNAME\",onChange:e=>c(e.target.value),value:r,onKeyUp:m}),o.a.createElement(\"button\",{className:\"btn joinBtn\",onClick:l},\"Join\"),o.a.createElement(\"span\",{className:\"createInfo\"},\"If you don't have an invite then create \\xa0\",o.a.createElement(\"a\",{onClick:e=>{e.preventDefault();const t=Object(u.a)();a(t),i.a.success(\"Created a new room\")},href:\"/create-room\",className:\"createNewBtn\"},\"new room\")))),o.a.createElement(\"footer\",null,o.a.createElement(\"h4\",null,\"Built with \",o.a.createElement(\"span\",{role:\"img\",\"aria-label\":\"love\"},\"\\ud83d\\udc9b\"),\" by \",o.a.createElement(\"a\",{href:\"https://github.com/MEPRAKHAR\"},\"Prakhar\"),\" & \",o.a.createElement(\"a\",{href:\"https://github.com/ikigai0822\"},\"Pranay\"))))},E=a(12),p=a.n(E),C=a(112);var g=e=>{let{username:t}=e;return o.a.createElement(\"div\",{className:\"client\"},o.a.createElement(C.a,{name:t,size:50,round:\"14px\"}),o.a.createElement(\"span\",{className:\"userName\"},t))},h=a(25),N=a.n(h);a(196),a(197),a(198),a(199),a(200),a(202);var f=e=>{let{roomId:t,onCodeChange:a,selectedLanguage:r}=e;const c=Object(n.useRef)(null),[l,s]=Object(n.useState)({});return Object(n.useEffect)(()=>{let e;(async()=>{(e=N.a.fromTextArea(document.getElementById(\"realtimeEditor\"),{mode:{name:r,json:!0},theme:\"dracula\",autoCloseTags:!0,autoCloseBrackets:!0,lineNumbers:!0})).on(\"change\",(n,o)=>{const{origin:r}=o,c=n.getValue(),l=e.getCursor();a(c),\"setValue\"!==r&&socketContext&&socketContext.emit(p.a.CODE_CHANGE,{roomId:t,code:c,cursorPosition:{line:l.line,ch:l.ch},userId:socketContext.userId})}),e.on(\"cursorActivity\",()=>{const a=e.getCursor();socketContext.emit(p.a.SET_CURSOR_POSITION,{roomId:t,cursorPosition:{line:a.line,ch:a.ch},userId:socketContext.userId})}),c.current=e})()},[socketContext,t,a,r]),Object(n.useEffect)(()=>{const e=e=>{let{code:t,cursorPosition:n,userId:o}=e;null!==t&&c.current&&c.current.setValue(t),n&&o!==socketContext.userId&&a(o,n)},t=e=>{let{cursorPosition:t,userId:n}=e;n!==socketContext.userId&&a(n,t)};function a(e,t){s(a=>({...a,[e]:t})),Object.entries(l).forEach(e=>{let[t,a]=e;if(c.current){const e=document.createElement(\"span\");e.style.borderLeft=`2px solid ${function(e){return\"#\"+(12345678*e%16777215).toString(16).padStart(6,\"0\")}(t)}`,e.className=\"remote-cursor\",c.current.setBookmark(a,{widget:e})}})}return socketContext&&(socketContext.on(p.a.CODE_CHANGE,e),socketContext.on(p.a.SET_CURSOR_POSITION,t)),()=>{socketContext&&(socketContext.off(p.a.CODE_CHANGE),socketContext.off(p.a.SET_CURSOR_POSITION))}},[socketContext,l]),o.a.createElement(\"textarea\",{id:\"realtimeEditor\"})},v=a(111);var O=()=>o.a.createElement(\"div\",{className:\"chat-container\"},o.a.createElement(\"p\",null,\"ChatBox Component\"),o.a.createElement(\"iframe\",{src:\"https://www5.cbox.ws/box/?boxid=953150&boxtag=l6XwUZ\",width:\"100%\",height:\"450px\",allow:\"autoplay\",style:{border:\"none\",frameBorder:\"0\",marginTop:\"0\",marginBottom:\"0\",marginLeft:\"0\",marginRight:\"0\",overflowY:\"auto\"},title:\"Chat Box\"}));var I=()=>{const e=Object(n.useRef)(null),t=Object(n.useRef)(null),a=Object(s.n)(),{roomId:r}=Object(s.r)(),c=Object(s.p)(),[l,m]=Object(n.useState)([]),[u,d]=Object(n.useState)(\"javascript\");return Object(n.useEffect)(()=>((async()=>{var n;function o(e){console.log(\"socket error\",e),i.a.error(\"Socket connection failed, try again later.\"),c(\"/\")}e.current=await(async()=>Object(v.a)(Object({NODE_ENV:\"production\",PUBLIC_URL:\"\"}).REACT_APP_BACKEND_URL,{\"force new connection\":!0,reconnectionAttempt:\"Infinity\",timeout:1e4,transports:[\"websocket\"]}))(),e.current.on(\"connect_error\",e=>o(e)),e.current.on(\"connect_failed\",e=>o(e)),e.current.emit(p.a.JOIN,{roomId:r,username:null===(n=a.state)||void 0===n?void 0:n.username}),e.current.on(p.a.JOINED,n=>{var o;let{clients:r,username:c,socketId:l}=n;c!==(null===(o=a.state)||void 0===o?void 0:o.username)&&(i.a.success(`${c} joined the room.`),console.log(`${c} joined`)),m(r),e.current.emit(p.a.SYNC_CODE,{code:t.current,socketId:l})}),e.current.on(p.a.DISCONNECTED,e=>{let{socketId:t,username:a}=e;i.a.success(`${a} left the room.`),m(e=>e.filter(e=>e.socketId!==t))})})(),()=>{e.current.disconnect(),e.current.off(p.a.JOINED),e.current.off(p.a.DISCONNECTED)}),[]),a.state?o.a.createElement(\"div\",{className:\"mainWrap\"},o.a.createElement(\"div\",{className:\"aside\"},o.a.createElement(\"div\",{className:\"asideInner\"},o.a.createElement(\"div\",{className:\"logo\"},o.a.createElement(\"img\",{className:\"logoImage\",src:\"/codemate.jpg\",alt:\"logo\"})),o.a.createElement(\"h3\",null,\"Connected\"),o.a.createElement(\"div\",{className:\"clientsList\"},l.map(e=>o.a.createElement(g,{key:e.socketId,username:e.username})))),o.a.createElement(\"div\",{className:\"button-container\"},o.a.createElement(\"button\",{className:\"btn copyBtn\",onClick:async function(){try{await navigator.clipboard.writeText(r),i.a.success(\"Room ID has been copied to your clipboard\")}catch(e){i.a.error(\"Could not copy the Room ID\"),console.error(e)}}},\"Copy ROOM ID\"),o.a.createElement(\"button\",{className:\"btn leaveBtn\",onClick:function(){c(\"/\")}},\"Leave\"))),o.a.createElement(\"div\",{className:\"middle\"},o.a.createElement(f,{socketRef:e,roomId:r,selectedLanguage:u,onCodeChange:e=>{t.current=e}})),o.a.createElement(\"div\",{className:\"language-selector\"},o.a.createElement(\"select\",{value:u,onChange:e=>d(e.target.value)},o.a.createElement(\"option\",{value:\"javascript\"},\"JavaScript\"),o.a.createElement(\"option\",{value:\"python\"},\"Python\"))),o.a.createElement(\"div\",{className:\"right\"},o.a.createElement(\"h1\",null,\"Welcome to the Chat\"),o.a.createElement(O,null)),o.a.createElement(\"div\",{className:\"bottom\"})):o.a.createElement(s.a,{to:\"/\"})};var b=function(){return o.a.createElement(o.a.Fragment,null,o.a.createElement(\"div\",null,o.a.createElement(m.Toaster,{position:\"top-right\",toastOptions:{success:{theme:{primary:\"#4aed88\"}}}})),o.a.createElement(l.a,null,o.a.createElement(s.d,null,o.a.createElement(s.b,{path:\"/\",element:o.a.createElement(d,null)}),o.a.createElement(s.b,{path:\"/editor/:roomId\",element:o.a.createElement(I,null)}))))};var k=e=>{e&&e instanceof Function&&a.e(3).then(a.bind(null,206)).then(t=>{let{getCLS:a,getFID:n,getFCP:o,getLCP:r,getTTFB:c}=t;a(e),n(e),o(e),r(e),c(e)})};c.a.render(o.a.createElement(o.a.StrictMode,null,o.a.createElement(b,null)),document.getElementById(\"root\")),k()}},[[113,1,2]]]);","extractedComments":[]}